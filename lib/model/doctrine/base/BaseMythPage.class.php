<?php

/**
 * BaseMythPage
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $myth_id
 * @property enum $myth_category
 * @property clob $content
 * @property boolean $is_active
 * @property Myth $Myth
 * 
 * @method integer  getId()            Returns the current record's "id" value
 * @method integer  getMythId()        Returns the current record's "myth_id" value
 * @method enum     getMythCategory()  Returns the current record's "myth_category" value
 * @method clob     getContent()       Returns the current record's "content" value
 * @method boolean  getIsActive()      Returns the current record's "is_active" value
 * @method Myth     getMyth()          Returns the current record's "Myth" value
 * @method MythPage setId()            Sets the current record's "id" value
 * @method MythPage setMythId()        Sets the current record's "myth_id" value
 * @method MythPage setMythCategory()  Sets the current record's "myth_category" value
 * @method MythPage setContent()       Sets the current record's "content" value
 * @method MythPage setIsActive()      Sets the current record's "is_active" value
 * @method MythPage setMyth()          Sets the current record's "Myth" value
 * 
 * @package    shakmyth
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 6820 2009-11-30 17:27:49Z jwage $
 */
abstract class BaseMythPage extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('myth_page');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             'length' => '4',
             ));
        $this->hasColumn('myth_id', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => '4',
             ));
        $this->hasColumn('myth_category', 'enum', null, array(
             'type' => 'enum',
             'values' => 
             array(
              0 => '',
              1 => 'brief presentation',
              2 => 'classical sources',
              3 => 'some secondary sources',
              4 => 'occurrences in Shakespeare',
              5 => 'some contemporary references',
              6 => 'analysis',
              7 => 'selected bibliography',
              8 => 'iconography',
             ),
             'default' => '',
             ));
        $this->hasColumn('content', 'clob', null, array(
             'type' => 'clob',
             ));
        $this->hasColumn('is_active', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => false,
             ));

        $this->option('collate', 'utf8_unicode_ci');
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Myth', array(
             'local' => 'myth_id',
             'foreign' => 'id'));

        $searchable0 = new Doctrine_Template_Searchable(array(
             'fields' => 
             array(
              0 => 'content',
              1 => 'myth_category',
             ),
             'Timestampable' => NULL,
             ));
        $this->actAs($searchable0);
    }
}